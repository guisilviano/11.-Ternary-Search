def ternary_search(arr, target, left, right):
    """
    Realiza a busca de um elemento em uma lista ordenada usando Ternary Search.

    :param arr: Lista ordenada.
    :param target: Elemento a ser encontrado.
    :param left: Índice inicial.
    :param right: Índice final.
    :return: Índice do elemento se encontrado, caso contrário -1.
    """
    if left > right:
        return -1  # Elemento não encontrado

    # Divide o intervalo em três partes
    mid1 = left + (right - left) // 3
    mid2 = right - (right - left) // 3

    # Verifica se o target está em uma das partes
    if arr[mid1] == target:
        return mid1
    if arr[mid2] == target:
        return mid2

    # Decide em qual intervalo continuar a busca
    if target < arr[mid1]:
        return ternary_search(arr, target, left, mid1 - 1)
    elif target > arr[mid2]:
        return ternary_search(arr, target, mid2 + 1, right)
    else:
        return ternary_search(arr, target, mid1 + 1, mid2 - 1)


# Testes
if __name__ == "__main__":
    data = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
    target = 13
    result = ternary_search(data, target, 0, len(data) - 1)
    if result != -1:
        print(f"Elemento {target} encontrado no índice {result}.")
    else:
        print(f"Elemento {target} não encontrado.")
